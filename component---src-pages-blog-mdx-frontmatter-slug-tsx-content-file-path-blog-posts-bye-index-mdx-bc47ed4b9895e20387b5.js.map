{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-posts-bye-index-mdx-bc47ed4b9895e20387b5.js","mappings":"gNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,qBAAsB,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,sBAClK,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCTA,SAASW,EAAQC,GACf,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,OAAOJ,EAAAA,cAAoBO,EAAAA,EAAQ,CACjCC,MAAO,IACNR,EAAAA,cAAoB,MAAO,KAAMM,GACtC,CACe,SAASG,EAAiBjB,GACvC,OAAOQ,EAAAA,cAAoBG,EAASX,EAAOQ,EAAAA,cAAoBU,EAAqBlB,GACtF,CACA,MACamB,EAAOC,IAClB,IAAIC,EAAWC,EACf,IAAI,KAACT,GAAQO,EACb,OAAOZ,EAAAA,cAAoBe,EAAAA,EAAK,CAC9BP,MAAkC,QAA1BK,EAAYR,EAAKW,WAA+B,IAAdH,GAAoF,QAAnDC,EAAwBD,EAAUI,mBAAmD,IAA1BH,OAArE,EAAiHA,EAAsBN,OACxM,C,+ECXW,SAASD,EAAO,GAAoC,IAApC,SAAED,EAAQ,MAAEE,GAAqB,EAC9D,OACER,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACkB,EAAAA,GAAI,CAACC,GAAG,KAAI,SAEfnB,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACkB,EAAAA,GAAI,CAACC,GAAG,aAAY,aAEvBnB,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACkB,EAAAA,GAAI,CAACC,GAAG,SAAQ,WAIvBnB,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAKQ,GACJF,GAIT,C,+ECvBe,SAASS,EAAI,GAAuB,IAAD,QAAtB,MAAEP,GAAkB,EAC9C,MAAMH,GAAOe,EAAAA,EAAAA,IAAc,cAS3B,OACEpB,EAAAA,cAAAA,QAAAA,KACGQ,EAAM,MAAa,QAAV,EAACH,EAAKgB,YAAI,OAAc,QAAd,EAATC,EAAWC,oBAAY,WAAd,EAATC,EAAyBhB,MAG1C,C,sECWO,MAAMiB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB3B,GAC/B,MAAM4B,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf1B,EACFA,EAAW4B,GAGb,IAAIA,KAAsB5B,IAChC,CAAC4B,EAAmB5B,GACzB,C","sources":["webpack://dev-stickers/./blog-posts/bye/index.mdx","webpack://dev-stickers/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://dev-stickers/./src/components/Layout.tsx","webpack://dev-stickers/./src/components/Seo.tsx","webpack://dev-stickers/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Bye bye everyone!\"), \"\\n\", React.createElement(_components.p, null, \"See you all later!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/daldal/Desktop/Github/gatsby-stickers/blog-posts/bye/index.mdx\";\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nfunction BlogPos(_ref) {\n  let {data, children} = _ref;\n  return React.createElement(Layout, {\n    title: \"\"\n  }, React.createElement(\"div\", null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPos, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"2764092766\";\nexport const Head = _ref2 => {\n  var _data$mdx, _data$mdx$frontmatter;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title\n  });\n};\n","import { Link } from 'gatsby';\nimport React from 'react';\n\ninterface ILayoutProps {\n  children: any;\n  title: string;\n}\n\nexport default function Layout({ children, title }: ILayoutProps) {\n  return (\n    <div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about-us\">About Us</Link>\n          </li>\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1>{title}</h1>\n        {children}\n      </main>\n    </div>\n  );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\ninterface ISeoProps {\n  title: string;\n}\n\nexport default function Seo({ title }: ISeoProps) {\n  const data = useStaticQuery<Queries.SeoDataQuery>(graphql`\n    query SeoData {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <title>\n      {title} | {data.site?.siteMetadata?.title}\n    </title>\n  );\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPos","_ref","data","children","Layout","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$mdx","_data$mdx$frontmatter","Seo","mdx","frontmatter","Link","to","useStaticQuery","site","_data$site","siteMetadata","_data$site$siteMetada","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}